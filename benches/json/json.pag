lexer {
    DIGIT     = '0'..'9';
    NONZERO   = '1'..'9';
    HEX_DIGIT = '0' .. '9' | 'a' .. 'f' | 'A' .. 'F';
    ESCAPED   = '"' | '\\' | '/' | 'b' | 'f' | 'n' | 'r' | 't';

    LBRACKET = '{';
    RBRACKET = '}';
    COMMA    = ',';
    COLON    = ':';
    LSQUARE  = '[';
    RSQUARE  = ']';
    TRUE     = "true";
    FALSE    = "false";
    NULL     = "null";
    STRING   = '"' ~ ( !('\\' | '"') | '\\' ~ (ESCAPED | 'u' ~ HEX_DIGIT ~ HEX_DIGIT ~ HEX_DIGIT ~ HEX_DIGIT) )* ~ '"';
    NUMBER   = '-'? ~ ('0' | NONZERO ~ DIGIT*) ~ ('.' ~ DIGIT+)? ~ (('e' | 'E') ~ ('+' | '-')? ~ DIGIT+)?;

    skip = ('\n' | '\r' | '\t' | ' ')+;
}

parser json {
    active attribute =
        string ~ COLON ~ value;

    active string = STRING;
    active number = NUMBER;
    active lit_true = TRUE;
    active lit_false = FALSE;
    active lit_null = NULL;

    active object =
        LBRACKET ~ (attribute ~ (COMMA ~ attribute)*)? ~ RBRACKET;

    active array =
        LSQUARE ~ (value ~ (COMMA ~ value)*)? ~ RSQUARE;

    silent value = string | number | array | object | lit_true | lit_false | lit_null;

    active json = value;
}
