lexer {
    definition DIGIT     = '0' .. '9';
    active token LPAREN     = '(';
    active token RPAREN     = ')';
    active token PLUS     = '+' | '加';
    active token MULT     = '*' | '乘';
    active token INT       = DIGIT+;
    silent token WHITESPACE = (' ' | '\t' | '\n' | '\r')+;
}

parser sexpr {
    active compound
        = LPAREN ~ op ~ (compound | int)* ~ RPAREN;

    active op
        = PLUS | MULT;

    active int
        = INT;

    active sexpr
        = compound | int;
}
