lexer {
    definition DIGIT     = '0' .. '9';

    token LPAREN     = '(';
    token RPAREN     = ')';
    token PLUS     = '+';
    token MULT     = '*';
    token INT       = DIGIT+;
    token SPECIAL  = '\u{FF}' .. '\u{D7FF}';

    skip = (' ' | '\t' | '\n' | '\r')+;
}

parser expr {
    active expr
        = mult ~ (PLUS ~ mult)*;

    active mult
        = primary ~ (MULT ~ primary)*;

    silent primary
        = special | int | LPAREN ~ expr ~ RPAREN;

    active int
        = INT;

    active special
        = SPECIAL;
}
