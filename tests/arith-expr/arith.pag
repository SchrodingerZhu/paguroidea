lexer {
    DIGIT = '0' .. '9';

    LPAREN  = '(';
    RPAREN  = ')';
    PLUS    = '+';
    MULT    = '*';
    INT     = DIGIT+;
    SPECIAL = '\u{FF}' .. '\u{D7FF}';

    skip = (' ' | '\t' | '\n' | '\r')+;
}

parser expr {
    active expr
        = mult ~ (PLUS ~ mult)*;

    active mult
        = primary ~ (MULT ~ primary)*;

    silent primary
        = special | int | LPAREN ~ expr ~ RPAREN;

    active int
        = INT;

    active special
        = SPECIAL;
}
